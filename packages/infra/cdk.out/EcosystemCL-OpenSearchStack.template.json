{
 "Description": "OpenSearch Serverless for Helix vector search (2 OCU dev / 4 OCU prod)",
 "Resources": {
  "HelixEncryptionPolicy": {
   "Type": "AWS::OpenSearchServerless::SecurityPolicy",
   "Properties": {
    "Name": "helix-encryption-policy",
    "Policy": "{\"Rules\":[{\"Resource\":[\"collection/helix-patterns\"],\"ResourceType\":\"collection\"}],\"AWSOwnedKey\":true}",
    "Type": "encryption"
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/HelixEncryptionPolicy"
   }
  },
  "HelixNetworkPolicy": {
   "Type": "AWS::OpenSearchServerless::SecurityPolicy",
   "Properties": {
    "Name": "helix-network-policy",
    "Policy": "[{\"Rules\":[{\"Resource\":[\"collection/helix-patterns\"],\"ResourceType\":\"collection\"},{\"Resource\":[\"collection/helix-patterns\"],\"ResourceType\":\"dashboard\"}],\"AllowFromPublic\":true}]",
    "Type": "network"
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/HelixNetworkPolicy"
   }
  },
  "HelixDataAccessRoleF9DC48D5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::219895243073:root",
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/HelixDataAccessRole/Resource"
   }
  },
  "HelixDataPolicy": {
   "Type": "AWS::OpenSearchServerless::AccessPolicy",
   "Properties": {
    "Name": "helix-data-policy",
    "Policy": {
     "Fn::Join": [
      "",
      [
       "[{\"Rules\":[{\"Resource\":[\"collection/helix-patterns\"],\"Permission\":[\"aoss:CreateCollectionItems\",\"aoss:UpdateCollectionItems\",\"aoss:DescribeCollectionItems\"],\"ResourceType\":\"collection\"},{\"Resource\":[\"index/helix-patterns/*\"],\"Permission\":[\"aoss:CreateIndex\",\"aoss:UpdateIndex\",\"aoss:DescribeIndex\",\"aoss:ReadDocument\",\"aoss:WriteDocument\"],\"ResourceType\":\"index\"}],\"Principal\":[\"",
       {
        "Fn::GetAtt": [
         "HelixDataAccessRoleF9DC48D5",
         "Arn"
        ]
       },
       "\",\"arn:aws:iam::219895243073:root\"]}]"
      ]
     ]
    },
    "Type": "data"
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/HelixDataPolicy"
   }
  },
  "HelixCollection": {
   "Type": "AWS::OpenSearchServerless::Collection",
   "Properties": {
    "Description": "ECOSYSTEMCL.AI Helix Pattern Knowledge Base - Vector Search Collection",
    "Name": "helix-patterns",
    "Type": "VECTORSEARCH"
   },
   "DependsOn": [
    "HelixDataPolicy",
    "HelixEncryptionPolicy",
    "HelixNetworkPolicy"
   ],
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/HelixCollection"
   }
  },
  "OCUScalingFunctionServiceRole53F20105": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/OCUScalingFunction/ServiceRole/Resource"
   }
  },
  "OCUScalingFunctionServiceRoleDefaultPolicy8FD6A2A5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "aoss:DescribeCollection",
        "aoss:UpdateCollection"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "HelixCollection",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OCUScalingFunctionServiceRoleDefaultPolicy8FD6A2A5",
    "Roles": [
     {
      "Ref": "OCUScalingFunctionServiceRole53F20105"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/OCUScalingFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "OCUScalingFunctionEE8BB4F6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n        const { UpdateCollectionCommand, OpenSearchServerlessClient } = require('@aws-sdk/client-opensearchserverless');\n        \n        exports.handler = async (event) => {\n          const client = new OpenSearchServerlessClient({ region: process.env.AWS_REGION });\n          const { action } = event;\n          \n          // Determine OCU settings based on action\n          const ocuConfig = action === 'scale-up' \n            ? { indexingOCU: 1, searchOCU: 1 }\n            : { indexingOCU: 1, searchOCU: 1 }; // Minimum OCU during off-hours\n          \n          try {\n            // Note: OCU scaling API may not be available immediately\n            // This is a placeholder for when the API becomes available\n            console.log('OCU scaling configuration:', ocuConfig);\n            \n            // For now, just log the intended action\n            return {\n              statusCode: 200,\n              body: JSON.stringify({ \n                message: 'OCU scaling logged',\n                config: ocuConfig \n              })\n            };\n          } catch (error) {\n            console.error('OCU scaling error:', error);\n            throw error;\n          }\n        };\n      "
    },
    "Environment": {
     "Variables": {
      "COLLECTION_NAME": "helix-patterns",
      "ENVIRONMENT": "dev"
     }
    },
    "FunctionName": "helix-ocu-scaling",
    "Handler": "handler",
    "Role": {
     "Fn::GetAtt": [
      "OCUScalingFunctionServiceRole53F20105",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "OCUScalingFunctionServiceRoleDefaultPolicy8FD6A2A5",
    "OCUScalingFunctionServiceRole53F20105"
   ],
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/OCUScalingFunction/Resource"
   }
  },
  "ScaleUpRule1971299E": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 6 ? * MON-FRI *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "OCUScalingFunctionEE8BB4F6",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": "{\"action\":\"scale-up\"}"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/ScaleUpRule/Resource"
   }
  },
  "ScaleUpRuleAllowEventRuleEcosystemCLOpenSearchStackOCUScalingFunction87694A009F141403": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OCUScalingFunctionEE8BB4F6",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "ScaleUpRule1971299E",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/ScaleUpRule/AllowEventRuleEcosystemCLOpenSearchStackOCUScalingFunction87694A00"
   }
  },
  "ScaleDownRuleFB5C2F7F": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 20 ? * MON-FRI *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "OCUScalingFunctionEE8BB4F6",
        "Arn"
       ]
      },
      "Id": "Target0",
      "Input": "{\"action\":\"scale-down\"}"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/ScaleDownRule/Resource"
   }
  },
  "ScaleDownRuleAllowEventRuleEcosystemCLOpenSearchStackOCUScalingFunction87694A008F65989A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OCUScalingFunctionEE8BB4F6",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "ScaleDownRuleFB5C2F7F",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/ScaleDownRule/AllowEventRuleEcosystemCLOpenSearchStackOCUScalingFunction87694A00"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/0WNsQ7CMAxEv4U9NVAxsKJKjIDKB6DgGuGSJlWcFKEo/44aEExn39n3aqjXG1gt9FMq7B6V4Sukc9D4UPopl+RGskLa413IT+QNiUBqbvZMGD2H18kZxpdqbnaHSCL/vXHGEAZ2NivWA6TWGZqDov+7z5SV0cO10xfrOuoFDkX20ZaGb1jIP2/+JT+wSGHQRDYIpDZ+MdFQzqolcdFjsY4xjDFkNTOgl+VU17DewmrRC3Plow08ELQffQMfuPZsGwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-OpenSearchStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "CollectionEndpoint": {
   "Description": "OpenSearch Serverless Collection Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "HelixCollection",
     "CollectionEndpoint"
    ]
   },
   "Export": {
    "Name": "HelixCollectionEndpoint"
   }
  },
  "CollectionArn": {
   "Description": "OpenSearch Serverless Collection ARN",
   "Value": {
    "Fn::GetAtt": [
     "HelixCollection",
     "Arn"
    ]
   },
   "Export": {
    "Name": "HelixCollectionArn"
   }
  },
  "DataAccessRoleArn": {
   "Description": "IAM Role for OpenSearch data access",
   "Value": {
    "Fn::GetAtt": [
     "HelixDataAccessRoleF9DC48D5",
     "Arn"
    ]
   },
   "Export": {
    "Name": "HelixDataAccessRoleArn"
   }
  },
  "EstimatedMonthlyCost": {
   "Description": "Estimated monthly cost (dev environment)",
   "Value": "$350",
   "Export": {
    "Name": "HelixEstimatedCost"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}