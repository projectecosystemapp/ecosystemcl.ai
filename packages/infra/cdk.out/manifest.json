{
  "version": "48.0.0",
  "artifacts": {
    "EcosystemCL-StorageStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "EcosystemCL-StorageStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "EcosystemCL-StorageStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://219895243073/us-west-2",
      "properties": {
        "templateFile": "EcosystemCL-StorageStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Architecture": "Serverless",
          "Environment": "production",
          "ManagedBy": "AWS-CDK",
          "Project": "ECOSYSTEMCL.AI"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-deploy-role-219895243073-us-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-cfn-exec-role-219895243073-us-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-219895243073-us-west-2/d35e4bc62eafdc68e8e05decdd663013adc6badbdf9dcf1d33f241df0e6ea4c5.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "EcosystemCL-StorageStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-lookup-role-219895243073-us-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        },
        "stackName": "EcosystemCL-Storage"
      },
      "dependencies": [
        "EcosystemCL-StorageStack.assets"
      ],
      "metadata": {
        "/EcosystemCL-StorageStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Architecture",
                "Value": "Serverless"
              },
              {
                "Key": "Environment",
                "Value": "production"
              },
              {
                "Key": "ManagedBy",
                "Value": "AWS-CDK"
              },
              {
                "Key": "Project",
                "Value": "ECOSYSTEMCL.AI"
              }
            ]
          }
        ],
        "/EcosystemCL-StorageStack/ArtifactsBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ArtifactsBucket2AAC5544"
          }
        ],
        "/EcosystemCL-StorageStack/EmbeddingsBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EmbeddingsBucket71985974"
          }
        ],
        "/EcosystemCL-StorageStack/UserContentBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserContentBucket28BD072F"
          }
        ],
        "/EcosystemCL-StorageStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/EcosystemCL-StorageStack/Exports/Output{\"Fn::GetAtt\":[\"ArtifactsBucket2AAC5544\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttArtifactsBucket2AAC5544ArnD57FAE19"
          }
        ],
        "/EcosystemCL-StorageStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/EcosystemCL-StorageStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "EcosystemCL-StorageStack"
    },
    "EcosystemCL-OpenSearchStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "EcosystemCL-OpenSearchStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "EcosystemCL-OpenSearchStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://219895243073/us-west-2",
      "properties": {
        "templateFile": "EcosystemCL-OpenSearchStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Architecture": "Serverless",
          "Environment": "production",
          "ManagedBy": "AWS-CDK",
          "Project": "ECOSYSTEMCL.AI"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-deploy-role-219895243073-us-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-cfn-exec-role-219895243073-us-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-219895243073-us-west-2/5dd298ffa0b702be1c74b91b87eb5f48b0de5d9f26613ef4015ea353bfd90396.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "EcosystemCL-OpenSearchStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-lookup-role-219895243073-us-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        },
        "stackName": "EcosystemCL-OpenSearch"
      },
      "dependencies": [
        "EcosystemCL-OpenSearchStack.assets"
      ],
      "metadata": {
        "/EcosystemCL-OpenSearchStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Architecture",
                "Value": "Serverless"
              },
              {
                "Key": "Environment",
                "Value": "production"
              },
              {
                "Key": "ManagedBy",
                "Value": "AWS-CDK"
              },
              {
                "Key": "Project",
                "Value": "ECOSYSTEMCL.AI"
              }
            ]
          }
        ],
        "/EcosystemCL-OpenSearchStack/HelixEncryptionPolicy": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixEncryptionPolicy"
          }
        ],
        "/EcosystemCL-OpenSearchStack/HelixNetworkPolicy": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixNetworkPolicy"
          }
        ],
        "/EcosystemCL-OpenSearchStack/HelixDataAccessRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixDataAccessRoleF9DC48D5"
          }
        ],
        "/EcosystemCL-OpenSearchStack/HelixDataPolicy": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixDataPolicy"
          }
        ],
        "/EcosystemCL-OpenSearchStack/HelixCollection": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixCollection"
          }
        ],
        "/EcosystemCL-OpenSearchStack/OCUScalingFunction/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OCUScalingFunctionServiceRole53F20105"
          }
        ],
        "/EcosystemCL-OpenSearchStack/OCUScalingFunction/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OCUScalingFunctionServiceRoleDefaultPolicy8FD6A2A5"
          }
        ],
        "/EcosystemCL-OpenSearchStack/OCUScalingFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "OCUScalingFunctionEE8BB4F6"
          }
        ],
        "/EcosystemCL-OpenSearchStack/ScaleUpRule/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ScaleUpRule1971299E"
          }
        ],
        "/EcosystemCL-OpenSearchStack/ScaleUpRule/AllowEventRuleEcosystemCLOpenSearchStackOCUScalingFunction87694A00": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ScaleUpRuleAllowEventRuleEcosystemCLOpenSearchStackOCUScalingFunction87694A009F141403"
          }
        ],
        "/EcosystemCL-OpenSearchStack/ScaleDownRule/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ScaleDownRuleFB5C2F7F"
          }
        ],
        "/EcosystemCL-OpenSearchStack/ScaleDownRule/AllowEventRuleEcosystemCLOpenSearchStackOCUScalingFunction87694A00": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ScaleDownRuleAllowEventRuleEcosystemCLOpenSearchStackOCUScalingFunction87694A008F65989A"
          }
        ],
        "/EcosystemCL-OpenSearchStack/CollectionEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CollectionEndpoint"
          }
        ],
        "/EcosystemCL-OpenSearchStack/CollectionArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CollectionArn"
          }
        ],
        "/EcosystemCL-OpenSearchStack/DataAccessRoleArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DataAccessRoleArn"
          }
        ],
        "/EcosystemCL-OpenSearchStack/EstimatedMonthlyCost": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EstimatedMonthlyCost"
          }
        ],
        "/EcosystemCL-OpenSearchStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/EcosystemCL-OpenSearchStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/EcosystemCL-OpenSearchStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "EcosystemCL-OpenSearchStack"
    },
    "EcosystemCL-ComputeStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "EcosystemCL-ComputeStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "EcosystemCL-ComputeStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://219895243073/us-west-2",
      "properties": {
        "templateFile": "EcosystemCL-ComputeStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Architecture": "Serverless",
          "Environment": "production",
          "ManagedBy": "AWS-CDK",
          "Project": "ECOSYSTEMCL.AI"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-deploy-role-219895243073-us-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-cfn-exec-role-219895243073-us-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-219895243073-us-west-2/5c5978c83fe71ef2b053aac63d9269ffc8a8cbf1f1467e8479c9f9248cd80963.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "EcosystemCL-ComputeStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-lookup-role-219895243073-us-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        },
        "stackName": "EcosystemCL-Compute"
      },
      "dependencies": [
        "EcosystemCL-StorageStack",
        "EcosystemCL-OpenSearchStack",
        "EcosystemCL-ComputeStack.assets"
      ],
      "metadata": {
        "/EcosystemCL-ComputeStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Architecture",
                "Value": "Serverless"
              },
              {
                "Key": "Environment",
                "Value": "production"
              },
              {
                "Key": "ManagedBy",
                "Value": "AWS-CDK"
              },
              {
                "Key": "Project",
                "Value": "ECOSYSTEMCL.AI"
              }
            ]
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPC7985E27D"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet1Subnet02F5549C"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet1RouteTableDFD0AC54"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet1RouteTableAssociation59B9DFD5"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet1DefaultRoute861D33E8"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet1EIP467421EE"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet1NATGateway5177371A"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet2Subnet1072C708"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet2RouteTable06D8FF08"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet2RouteTableAssociation2C38243F"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPublicSubnet2DefaultRouteF48DA003"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPrivateSubnet1Subnet301629D2"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPrivateSubnet1RouteTable8A2FBD71"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPrivateSubnet1RouteTableAssociation2998B3FA"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPrivateSubnet1DefaultRoute01F3FE7C"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPrivateSubnet2Subnet25D445C0"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPrivateSubnet2RouteTableDB299B86"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPrivateSubnet2RouteTableAssociationAB1BF283"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCPrivateSubnet2DefaultRoute7A3AEB52"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCIGW017999F1"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCVPCGW82A5778B"
          }
        ],
        "/EcosystemCL-ComputeStack/ComputeVPC/RestrictDefaultSecurityGroupCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ComputeVPCRestrictDefaultSecurityGroupCustomResourceD2DBE83E"
          }
        ],
        "/EcosystemCL-ComputeStack/Custom::VpcRestrictDefaultSGCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/EcosystemCL-ComputeStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
          }
        ],
        "/EcosystemCL-ComputeStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E"
          }
        ],
        "/EcosystemCL-ComputeStack/ECSCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECSCluster7D463CD4"
          }
        ],
        "/EcosystemCL-ComputeStack/DeadLetterQueue/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DeadLetterQueue9F481546"
          }
        ],
        "/EcosystemCL-ComputeStack/TaskQueue/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskQueueF51BE51C"
          }
        ],
        "/EcosystemCL-ComputeStack/TaskExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskExecutionRole250D2532"
          }
        ],
        "/EcosystemCL-ComputeStack/TaskExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskExecutionRoleDefaultPolicyA84DD1B0"
          }
        ],
        "/EcosystemCL-ComputeStack/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskRole30FC0FBB"
          }
        ],
        "/EcosystemCL-ComputeStack/TaskRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskRoleDefaultPolicy07FC53DE"
          }
        ],
        "/EcosystemCL-ComputeStack/AgentTaskDefinition/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AgentTaskDefinition51789D54"
          }
        ],
        "/EcosystemCL-ComputeStack/AgentTaskDefinition/AgentContainer/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AgentTaskDefinitionAgentContainerLogGroup98D93729"
          }
        ],
        "/EcosystemCL-ComputeStack/SourceCodeAnalyzer/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SourceCodeAnalyzerSecurityGroup570F9174"
          }
        ],
        "/EcosystemCL-ComputeStack/EmbeddingAgent/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EmbeddingAgentSecurityGroupDEC82812"
          }
        ],
        "/EcosystemCL-ComputeStack/PatternSynthesizer/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatternSynthesizerSecurityGroupE34143A0"
          }
        ],
        "/EcosystemCL-ComputeStack/ProjectAtlasStateMachine/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProjectAtlasStateMachineRoleE51ECEDA"
          }
        ],
        "/EcosystemCL-ComputeStack/ProjectAtlasStateMachine/Role/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProjectAtlasStateMachineRoleDefaultPolicy143E88DE"
          }
        ],
        "/EcosystemCL-ComputeStack/ProjectAtlasStateMachine/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProjectAtlasStateMachine21FBB44A"
          }
        ],
        "/EcosystemCL-ComputeStack/PatternVersionBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatternVersionBucketBC85B1D3"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCDeadLetterQueue/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCDeadLetterQueue4D130C83"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCAlarmTopic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCAlarmTopicF09B083C"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCDLQAlarm/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCDLQAlarm315E1E17"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCProcessor/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCProcessorServiceRoleC69BB556"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCProcessor/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCProcessorServiceRoleDefaultPolicy37C13FDB"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCProcessor/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCProcessor417BF916"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCProcessor/DynamoDBEventSource:EcosystemCLComputeStackPatternTable750C3342/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCProcessorDynamoDBEventSourceEcosystemCLComputeStackPatternTable750C33429075F0E2"
          }
        ],
        "/EcosystemCL-ComputeStack/TaskQueueUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskQueueUrl"
          }
        ],
        "/EcosystemCL-ComputeStack/StateMachineArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StateMachineArn"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCProcessorArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCProcessorArn"
          }
        ],
        "/EcosystemCL-ComputeStack/CDCDLQUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDCDLQUrl"
          }
        ],
        "/EcosystemCL-ComputeStack/VersionBucketName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VersionBucketName"
          }
        ],
        "/EcosystemCL-ComputeStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/EcosystemCL-ComputeStack/Exports/Output{\"Fn::GetAtt\":[\"TaskQueueF51BE51C\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttTaskQueueF51BE51CArnEED53A76"
          }
        ],
        "/EcosystemCL-ComputeStack/Exports/Output{\"Ref\":\"TaskQueueF51BE51C\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefTaskQueueF51BE51CA692F10C"
          }
        ],
        "/EcosystemCL-ComputeStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/EcosystemCL-ComputeStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "EcosystemCL-ComputeStack"
    },
    "EcosystemCL-ApiStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "EcosystemCL-ApiStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "EcosystemCL-ApiStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://219895243073/us-west-2",
      "properties": {
        "templateFile": "EcosystemCL-ApiStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Architecture": "Serverless",
          "Environment": "production",
          "ManagedBy": "AWS-CDK",
          "Project": "ECOSYSTEMCL.AI"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-deploy-role-219895243073-us-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-cfn-exec-role-219895243073-us-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-219895243073-us-west-2/cf264259b8cc77167b19e1c40ab0ae629f5bb805f0275cedd9c62cc4f0489361.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "EcosystemCL-ApiStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::219895243073:role/cdk-hnb659fds-lookup-role-219895243073-us-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        },
        "stackName": "EcosystemCL-API"
      },
      "dependencies": [
        "EcosystemCL-ComputeStack",
        "EcosystemCL-OpenSearchStack",
        "EcosystemCL-ApiStack.assets"
      ],
      "metadata": {
        "/EcosystemCL-ApiStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Architecture",
                "Value": "Serverless"
              },
              {
                "Key": "Environment",
                "Value": "production"
              },
              {
                "Key": "ManagedBy",
                "Value": "AWS-CDK"
              },
              {
                "Key": "Project",
                "Value": "ECOSYSTEMCL.AI"
              }
            ]
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPI5F04BC6C"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIDeploymentF641CB1Feca016260eefce2f5afe0f4b39f28583"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/DeploymentStage.v1/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIDeploymentStagev1B11E3A9C"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIEndpoint07194E90"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIOPTIONS6170D45C"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/patterns/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIpatterns648112DC"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/patterns/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIpatternsOPTIONSCE5E65F5"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/patterns/lookup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIpatternslookup3E4D030A"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/patterns/lookup/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIpatternslookupOPTIONS45E572FF"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/patterns/lookup/POST/ApiPermission.EcosystemCLApiStackEcosystemAPI7E20B1F6.POST..patterns.lookup": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIpatternslookupPOSTApiPermissionEcosystemCLApiStackEcosystemAPI7E20B1F6POSTpatternslookupD4849D3F"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/patterns/lookup/POST/ApiPermission.Test.EcosystemCLApiStackEcosystemAPI7E20B1F6.POST..patterns.lookup": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIpatternslookupPOSTApiPermissionTestEcosystemCLApiStackEcosystemAPI7E20B1F6POSTpatternslookup16D69465"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/patterns/lookup/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIpatternslookupPOST649CF630"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/planning/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIplanning6677C40B"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/planning/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIplanningOPTIONSB2D3243A"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/planning/create/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIplanningcreate0AAF3F27"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/planning/create/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIplanningcreateOPTIONS8932A4F0"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/planning/create/POST/ApiPermission.EcosystemCLApiStackEcosystemAPI7E20B1F6.POST..planning.create": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIplanningcreatePOSTApiPermissionEcosystemCLApiStackEcosystemAPI7E20B1F6POSTplanningcreateEC428921"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/planning/create/POST/ApiPermission.Test.EcosystemCLApiStackEcosystemAPI7E20B1F6.POST..planning.create": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIplanningcreatePOSTApiPermissionTestEcosystemCLApiStackEcosystemAPI7E20B1F6POSTplanningcreateADD397FA"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/planning/create/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIplanningcreatePOST002B91C0"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/health/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIhealth96EE62D4"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/health/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIhealthOPTIONS1E95A893"
          }
        ],
        "/EcosystemCL-ApiStack/EcosystemAPI/Default/health/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcosystemAPIhealthGET2A659125"
          }
        ],
        "/EcosystemCL-ApiStack/UserPoolAuthorizer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPoolAuthorizer2F68B0CA"
          }
        ],
        "/EcosystemCL-ApiStack/HelixLookupFunction/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixLookupFunctionServiceRole3017743B"
          }
        ],
        "/EcosystemCL-ApiStack/HelixLookupFunction/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixLookupFunctionServiceRoleDefaultPolicy2561DE1E"
          }
        ],
        "/EcosystemCL-ApiStack/HelixLookupFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixLookupFunctionB756A9F7"
          }
        ],
        "/EcosystemCL-ApiStack/PlannerFunction/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PlannerFunctionServiceRoleC9E6D47A"
          }
        ],
        "/EcosystemCL-ApiStack/PlannerFunction/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PlannerFunctionServiceRoleDefaultPolicyEF66685F"
          }
        ],
        "/EcosystemCL-ApiStack/PlannerFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PlannerFunction7813D2C8"
          }
        ],
        "/EcosystemCL-ApiStack/RequestValidator/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RequestValidatorB6FDBF18"
          }
        ],
        "/EcosystemCL-ApiStack/ApiEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiEndpoint"
          }
        ],
        "/EcosystemCL-ApiStack/HelixLookupFunctionArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HelixLookupFunctionArn"
          }
        ],
        "/EcosystemCL-ApiStack/PlannerFunctionArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PlannerFunctionArn"
          }
        ],
        "/EcosystemCL-ApiStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/EcosystemCL-ApiStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/EcosystemCL-ApiStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "EcosystemCL-ApiStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:secGroupsDisablesImplicitOpenListener": {
            "recommendedValue": true,
            "explanation": "Disable implicit openListener when custom security groups are provided"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1028.0"
}