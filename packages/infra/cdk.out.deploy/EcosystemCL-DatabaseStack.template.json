{
 "Description": "Primary data layer - DynamoDB, ElastiCache, OpenSearch/Aurora",
 "Resources": {
  "HelixPatternEntriesD80A9318": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "category",
      "AttributeType": "S"
     },
     {
      "AttributeName": "intent",
      "AttributeType": "S"
     },
     {
      "AttributeName": "keyword",
      "AttributeType": "S"
     },
     {
      "AttributeName": "patternId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "ContributorInsightsSpecification": {
     "Enabled": true
    },
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "KeywordIndex",
      "KeySchema": [
       {
        "AttributeName": "keyword",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "intent",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "PatternIdIndex",
      "KeySchema": [
       {
        "AttributeName": "patternId",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "category",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "intent",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "HelixPatternEntries"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/HelixPatternEntries/Resource"
   }
  },
  "WorkspaceStates6310A076": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "projectId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "version",
      "AttributeType": "S"
     },
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "lastModified",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "UserProjectsIndex",
      "KeySchema": [
       {
        "AttributeName": "userId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "lastModified",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "projectId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "version",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "WorkspaceStates"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/WorkspaceStates/Resource"
   }
  },
  "AgentProfiles62EC902A": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "agentId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "minTier",
      "AttributeType": "S"
     },
     {
      "AttributeName": "popularity",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "TierIndex",
      "KeySchema": [
       {
        "AttributeName": "minTier",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "popularity",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "agentId",
      "KeyType": "HASH"
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableName": "AgentProfiles"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/AgentProfiles/Resource"
   }
  },
  "Subscriptions1F71F6D8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableName": "Subscriptions"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/Subscriptions/Resource"
   }
  },
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "DeviceConfiguration": {
     "ChallengeRequiredOnNewDevice": true,
     "DeviceOnlyRememberedOnUserPrompt": true
    },
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 12,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": true,
      "RequireUppercase": true
     }
    },
    "Schema": [
     {
      "Mutable": false,
      "Name": "email",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "EcosystemCL-UserPool",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/UserPool/Resource"
   }
  },
  "CLIClientCE15E884": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AccessTokenValidity": 60,
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ClientName": "eco-cli-client",
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_CUSTOM_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "GenerateSecret": false,
    "IdTokenValidity": 60,
    "PreventUserExistenceErrors": "ENABLED",
    "RefreshTokenValidity": 43200,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "TokenValidityUnits": {
     "AccessToken": "minutes",
     "IdToken": "minutes",
     "RefreshToken": "minutes"
    },
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/CLIClient/Resource"
   }
  },
  "DataVPC8DC064BE": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcosystemCL-DataVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/DataVPC/Resource"
   }
  },
  "DataVPCIsolatedSubnet1Subnet2362BA08": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "DataVPC8DC064BE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet1/Subnet"
   }
  },
  "DataVPCIsolatedSubnet1RouteTable72828F96": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "DataVPC8DC064BE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet1/RouteTable"
   }
  },
  "DataVPCIsolatedSubnet1RouteTableAssociation0A09F2C9": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "DataVPCIsolatedSubnet1RouteTable72828F96"
    },
    "SubnetId": {
     "Ref": "DataVPCIsolatedSubnet1Subnet2362BA08"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet1/RouteTableAssociation"
   }
  },
  "DataVPCIsolatedSubnet2Subnet4C709E6C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "DataVPC8DC064BE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet2/Subnet"
   }
  },
  "DataVPCIsolatedSubnet2RouteTable502C74DD": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "DataVPC8DC064BE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet2/RouteTable"
   }
  },
  "DataVPCIsolatedSubnet2RouteTableAssociation89F0BEB1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "DataVPCIsolatedSubnet2RouteTable502C74DD"
    },
    "SubnetId": {
     "Ref": "DataVPCIsolatedSubnet2Subnet4C709E6C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/DataVPC/IsolatedSubnet2/RouteTableAssociation"
   }
  },
  "DataVPCRestrictDefaultSecurityGroupCustomResourceE62935CC": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "DataVPC8DC064BE",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "219895243073"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/DataVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-west-2:219895243073:security-group/",
             {
              "Fn::GetAtt": [
               "DataVPC8DC064BE",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-219895243073-us-west-2",
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "RedisSecurityGroupB05951F6": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for ElastiCache Redis",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "VpcId": {
     "Ref": "DataVPC8DC064BE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/RedisSecurityGroup/Resource"
   }
  },
  "RedisSubnetGroup": {
   "Type": "AWS::ElastiCache::SubnetGroup",
   "Properties": {
    "Description": "Subnet group for ElastiCache Redis",
    "SubnetIds": [
     {
      "Ref": "DataVPCIsolatedSubnet1Subnet2362BA08"
     },
     {
      "Ref": "DataVPCIsolatedSubnet2Subnet4C709E6C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/RedisSubnetGroup"
   }
  },
  "RedisCluster": {
   "Type": "AWS::ElastiCache::CacheCluster",
   "Properties": {
    "CacheNodeType": "cache.t3.micro",
    "CacheSubnetGroupName": {
     "Ref": "RedisSubnetGroup"
    },
    "ClusterName": "ecosystemcl-cache",
    "Engine": "redis",
    "NumCacheNodes": 1,
    "Port": 6379,
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "RedisSecurityGroupB05951F6",
       "GroupId"
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/RedisCluster"
   }
  },
  "OpenSearchServiceLinkedRole": {
   "Type": "AWS::IAM::ServiceLinkedRole",
   "Properties": {
    "AWSServiceName": "opensearchservice.amazonaws.com",
    "Description": "Service-linked role for Amazon OpenSearch Service to access VPC resources"
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/OpenSearchServiceLinkedRole"
   }
  },
  "OpenSearchSecurityGroup5212DDD0": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for OpenSearch",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "DataVPC8DC064BE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/OpenSearchSecurityGroup/Resource"
   }
  },
  "VectorSearchDomain48175A7A": {
   "Type": "AWS::OpenSearchService::Domain",
   "Properties": {
    "ClusterConfig": {
     "DedicatedMasterEnabled": false,
     "InstanceCount": 1,
     "InstanceType": "t3.small.search",
     "MultiAZWithStandbyEnabled": false,
     "ZoneAwarenessEnabled": false
    },
    "DomainEndpointOptions": {
     "EnforceHTTPS": false,
     "TLSSecurityPolicy": "Policy-Min-TLS-1-2-2019-07"
    },
    "DomainName": "ecosystemcl-vectors",
    "EBSOptions": {
     "EBSEnabled": true,
     "VolumeSize": 10,
     "VolumeType": "gp3"
    },
    "EncryptionAtRestOptions": {
     "Enabled": true
    },
    "EngineVersion": "OpenSearch_2.11",
    "LogPublishingOptions": {},
    "NodeToNodeEncryptionOptions": {
     "Enabled": true
    },
    "VPCOptions": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "OpenSearchSecurityGroup5212DDD0",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "DataVPCIsolatedSubnet1Subnet2362BA08"
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/VectorSearchDomain/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21RTU+EMBD9Ld5LVbKJZ8XEyyYS0L2a0o7sLKVD+oHZNPx3C0TYg6e+vjfz5ivn+eOBP9yJH5dJ1WUaGx5rL2THEvUV1dWInlQiP0SjgRXfZgETk9Qa9MTjpwNbEulZ2/AfKDSC8bfSykwMZM7jaZCzdioLVlochYc6NAaWhB1VFDxs9Vd+556dI4nCIxlWgwwW/fXNUhiW4FsiFdXCeZRCnoHHzWuLLmah0MF5sBND0fPFwo4o4YimA1VRaoIGMA6ElWe3ajy+Ui/QzB4rmiZWgaNgZeo5+VG/f9NA/0ulpREV2BfhgKWxwKdLtGjaOec9+CGkvRlSwC/ufswP/Cld7uIQMxuMxx54tb6/BCAjqtYBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "EcosystemCL-DatabaseStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "HelixPatternTableName": {
   "Description": "DynamoDB table name for Helix patterns",
   "Value": {
    "Ref": "HelixPatternEntriesD80A9318"
   },
   "Export": {
    "Name": "HelixPatternTableName"
   }
  },
  "HelixPatternTableArn": {
   "Description": "ARN of the Helix pattern table",
   "Value": {
    "Fn::GetAtt": [
     "HelixPatternEntriesD80A9318",
     "Arn"
    ]
   },
   "Export": {
    "Name": "HelixPatternTableArn"
   }
  },
  "UserPoolId": {
   "Description": "Cognito User Pool ID",
   "Value": {
    "Ref": "UserPool6BA7E5F2"
   },
   "Export": {
    "Name": "CognitoUserPoolId"
   }
  },
  "OpenSearchEndpoint": {
   "Description": "OpenSearch domain endpoint for vector search",
   "Value": {
    "Fn::GetAtt": [
     "VectorSearchDomain48175A7A",
     "DomainEndpoint"
    ]
   },
   "Export": {
    "Name": "OpenSearchEndpoint"
   }
  },
  "ExportsOutputFnGetAttHelixPatternEntriesD80A9318Arn058D2365": {
   "Value": {
    "Fn::GetAtt": [
     "HelixPatternEntriesD80A9318",
     "Arn"
    ]
   },
   "Export": {
    "Name": "EcosystemCL-Database:ExportsOutputFnGetAttHelixPatternEntriesD80A9318Arn058D2365"
   }
  },
  "ExportsOutputRefHelixPatternEntriesD80A9318917C9230": {
   "Value": {
    "Ref": "HelixPatternEntriesD80A9318"
   },
   "Export": {
    "Name": "EcosystemCL-Database:ExportsOutputRefHelixPatternEntriesD80A9318917C9230"
   }
  },
  "ExportsOutputFnGetAttUserPool6BA7E5F2Arn686ACC00": {
   "Value": {
    "Fn::GetAtt": [
     "UserPool6BA7E5F2",
     "Arn"
    ]
   },
   "Export": {
    "Name": "EcosystemCL-Database:ExportsOutputFnGetAttUserPool6BA7E5F2Arn686ACC00"
   }
  },
  "ExportsOutputFnGetAttWorkspaceStates6310A076ArnD1B61578": {
   "Value": {
    "Fn::GetAtt": [
     "WorkspaceStates6310A076",
     "Arn"
    ]
   },
   "Export": {
    "Name": "EcosystemCL-Database:ExportsOutputFnGetAttWorkspaceStates6310A076ArnD1B61578"
   }
  },
  "ExportsOutputRefWorkspaceStates6310A07673C5D374": {
   "Value": {
    "Ref": "WorkspaceStates6310A076"
   },
   "Export": {
    "Name": "EcosystemCL-Database:ExportsOutputRefWorkspaceStates6310A07673C5D374"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}